{"version":3,"sources":["context/root-context.js","components/TMDB-Icon/tmdbIcon.js","components/data.js","components/productionCompanies/network.js","components/movieCast/cast.js","components/movieTrailer/trailer.js","components/movie-detail-page/detail-page.js","components/card/index.js","components/genersList.js","components/navbar/nav.js","hoc/home.js","App.js","reportWebVitals.js","index.js"],"names":["RootContext","React","createContext","children","useState","movieId","setMovieId","pageNumber","setPageNumber","id","name","movieGener","setMovieGener","defaultValues","movieTv","setMovieTv","console","log","Provider","value","TmdbIcon","history","useHistory","className","onClick","push","data","title","URL","releaseDate","timeDuration","gener","age","Network","network","logos","map","logo","logo_path","src","alt","Cast","useContext","castInfo","setCastInfo","baseURL","setBaseURL","useEffect","axios","get","then","response","cast","filter","profile_path","original_name","character","Trailer","props","trailerKey","setTrailerKey","results","key","show","type","height","width","videoId","opts","playerVars","autoplay","DetailPage","trailer","setTrailer","originalTitle","movieURL","backdropURL","geners","runTime","numberOfSeasons","voteAverage","tagline","overview","status","productionCompanies","language","budget","movieInfo","setMovieInfo","original_title","poster_path","backdrop_path","genres","gen","release_date","Math","floor","runtime","number_of_seasons","parseInt","vote_average","toString","split","production_companies","spoken_languages","english_name","close","text","MovieCard","genersList","movies","tv","Nav","Home","movieData","setMovieData","localStorage","removeItem","setItem","BaseURL","getItem","movie","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sWAEaA,EAAcC,IAAMC,gBAElB,cAAmB,IAAhBC,EAAe,EAAfA,SAChB,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAoCJ,mBAAS,CAAEK,GAAI,GAAIC,KAAM,WAA7D,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8BR,mBAAS,SAAvC,mBACMS,EAAgB,CACpBR,UACAC,aACAC,aACAC,gBACAG,aACAC,gBACAE,QARF,KASEC,WATF,MAYA,OADAC,QAAQC,IAAI,aAAeZ,GAEzB,cAACL,EAAYkB,SAAb,CAAsBC,MAAON,EAA7B,SACGV,K,qBClBMiB,G,YAAW,WACtB,IAAIC,EAAUC,cAEd,OACE,qBAAKC,UAAU,WAAf,SACE,qBAAKA,UAAU,YAAYC,QAAS,kBAAMH,EAAQI,KAAK,MAAvD,SACE,sBAAKF,UAAU,KAAf,UACE,sCACA,sCACA,qBAAKA,UAAU,uB,iCC4CVG,G,MAzDF,CACX,CACEjB,GAAI,KACJkB,MAAO,cACPC,IAAK,yIACLC,YAAa,cACbC,aAAc,YACdC,MAAO,6BACPC,IAAK,OAEP,CACEvB,GAAI,KACJkB,MAAO,UACPC,IAAK,sHACLC,YAAa,cACbC,aAAc,YACdC,MAAO,iCACPC,IAAK,OAEP,CACEvB,GAAI,KACJkB,MAAO,OACPC,IAAK,mEACLC,YAAa,cACbC,aAAc,SACdC,MAAO,qBACPC,IAAK,OAEP,CACEvB,GAAI,KACJkB,MAAO,cACPC,IAAK,uEACLC,YAAa,cACbC,aAAc,YACdC,MAAO,WACPC,IAAK,OAEP,CACEvB,GAAI,KACJkB,MAAO,gBACPC,IAAK,uEACLC,YAAa,cACbC,aAAc,QACdC,MAAO,mBACPC,IAAK,OAEP,CACEvB,GAAI,KACJkB,MAAO,iBACPC,IAAK,iMACLC,YAAa,cACbC,aAAc,YACdC,MAAO,gBACPC,IAAK,SCjDIC,G,MAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBC,EAAQT,EAOZ,OANIQ,IACFC,EAAQD,EAAQE,KACd,SAACC,GAAD,mDAAgDA,EAAKC,eAKvD,qBAAKf,UAAU,UAAf,SACGY,EAAMC,KAAI,SAACC,GAAD,OACT,qBAAKd,UAAU,OAAf,SACE,qBAAKgB,IAAKF,EAAMG,IAAI,cCVjBC,G,MAAO,WAClB,MAAgCC,qBAAW1C,GAAnCK,EAAR,EAAQA,QACR,GADA,EAAiBC,WACeoC,qBAAW1C,IAAnCc,EAAR,EAAQA,QAER,GAFA,EAAiBC,WAEeX,mBAASsB,IAAzC,mBAAOiB,EAAP,KAAiBC,EAAjB,KACA,EAA8BxC,mBAAS,IAAvC,mBAAOyC,EAAP,KAAgBC,EAAhB,KAqBA,OAnBA7C,IAAM8C,WAAU,WACdD,EACE,gCACEhC,EACA,IACAT,EACA,uDAEH,CAACA,IAEJJ,IAAM8C,WAAU,WACdC,IAAMC,IAAIJ,GAASK,MAAK,SAACC,GACvBnC,QAAQC,IAAIkC,EAASzB,KAAK0B,MAC1BR,EACEO,EAASzB,KAAK0B,KAAKC,QAAO,SAACD,GAAD,OAAgC,OAAtBA,EAAKE,sBAG5C,CAACT,IAGF,qBAAKtB,UAAU,oCAAf,SACGoB,EAASP,KAAI,SAACgB,GAAD,OACZ,qBAAK7B,UAAU,OAAqBd,GAAI2C,EAAK3C,GAA7C,SACE,sBAAKc,UAAU,YAAf,UACE,qBAAKA,UAAU,cAAf,SACE,qBACEgB,IAAG,8CAAyCa,EAAKE,cACjDd,IAAI,OAGR,sBAAKjB,UAAU,QAAf,UACE,sBAAMA,UAAU,eAAhB,SAAgC6B,EAAKG,gBACrC,sBAAMhC,UAAU,YAAhB,uBACA,sBAAMA,UAAU,gBAAhB,SAAiC6B,EAAKI,mBAXjBJ,EAAK3C,W,iCC3B3BgD,EAAU,SAACC,GACtB,MAAgChB,qBAAW1C,GAAnCK,EAAR,EAAQA,QACR,GADA,EAAiBC,WACeoC,qBAAW1C,IAAnCc,EAAR,EAAQA,QAER,GAFA,EAAiBC,WAEmBX,mBAASsB,IAA7C,mBAAOiC,EAAP,KAAmBC,EAAnB,KACA,EAA8BxD,mBAAS,IAAvC,mBAAOyC,EAAP,KAAgBC,EAAhB,KAEA7C,IAAM8C,WAAU,WACdD,EACE,gCACEhC,EACA,IACAT,EACA,sDAEH,CAACA,IAEJJ,IAAM8C,WAAU,WACdC,IAAMC,IAAIJ,GAASK,MAAK,SAACC,GACvBnC,QAAQC,IAAIkC,EAASzB,MACrBkC,EAAcT,EAASzB,KAAKmC,QAAQ,GAAGC,UAExC,CAACjB,IAUJ,OACE,sBAAKtB,UAAU,oBAAf,UACE,qBAAKA,UAAU,SAASC,QAAS,kBAAMkC,EAAMK,MAAK,MAElD,qBAAKxC,UAAU,UAAf,SACE,cAAC,IAAD,CAAcyC,KAAK,QAAQC,OAAQ,IAAKC,MAAO,QAEjD,sBAAK3C,UAAU,UAAf,UACE,cAAC,IAAD,CAAS4C,QAASR,EAAYS,KAhBvB,CACXH,OAAQ,MACRC,MAAO,MACPG,WAAY,CACVC,SAAU,MAWV,WCnCOC,EAAa,WACxB,MAA8BnE,oBAAS,GAAvC,mBAAOoE,EAAP,KAAgBC,EAAhB,KACA,EAAgC/B,qBAAW1C,GAAnCK,EAAR,EAAQA,QACR,GADA,EAAiBC,WACeoC,qBAAW1C,IAAnCc,EAAR,EAAQA,QAER,GAFA,EAAiBC,WAEiBX,mBAAS,CACzCsE,cAAe,GACfC,SAAU,GACVC,YAAa,GACbC,OAAQ,GACRhD,YAAa,GACbiD,QAAS,GACTC,gBAAiB,GACjBC,YAAa,GACbC,QAAS,GACTC,SAAU,GACVC,OAAQ,GACRC,oBAAqB,GACrBC,SAAU,GACVC,OAAQ,MAdV,mBAAOC,EAAP,KAAkBC,EAAlB,KAgBA,EAA8BpF,mBAAS,IAAvC,mBAAOyC,EAAP,KAAgBC,EAAhB,KAEA7C,IAAM8C,WAAU,WACdD,EACE,gCACEhC,EACA,IACAT,EACA,+CAEH,CAACA,IAEJJ,IAAM8C,WAAU,WACdC,IAAMC,IAAIJ,GAASK,MAAK,SAACC,GACvBnC,QAAQC,IAAIkC,EAASzB,MACrB8D,EAAa,CACXd,cACEvB,EAASzB,KAAK+D,gBAAkBtC,EAASzB,KAAK6B,cAChDoB,SACE,uCAAyCxB,EAASzB,KAAKgE,YACzDd,YACE,uCAAyCzB,EAASzB,KAAKiE,cACzDd,OAAQ1B,EAASzB,KAAKkE,OAAOxD,KAAI,SAACyD,GAAD,OAASA,EAAInF,KAAO,QACrDmB,YAAasB,EAASzB,KAAKoE,aAC3BhB,QAAQ,GAAD,OAAKiB,KAAKC,MAAM7C,EAASzB,KAAKuE,QAAU,IAAxC,aACL9C,EAASzB,KAAKuE,QAAU,GADnB,KAGPlB,gBAAiB5B,EAASzB,KAAKwE,kBAAoB,WACnDlB,YACkE,GAAhEmB,SAAShD,EAASzB,KAAK0E,aAAaC,WAAWC,MAAM,KAAK,IAC1DH,SAAShD,EAASzB,KAAK0E,aAAaC,WAAWC,MAAM,KAAK,IAC5DrB,QAAS9B,EAASzB,KAAKuD,QACvBC,SAAU/B,EAASzB,KAAKwD,SACxBC,OAAQhC,EAASzB,KAAKyD,OACtBC,oBAAqBjC,EAASzB,KAAK6E,qBAAqBlD,QACtD,SAACnB,GAAD,OAAmC,OAAtBA,EAAQI,aAEvB+C,SAAUlC,EAASzB,KAAK8E,iBAAiB,GAAGC,aAC5CnB,OAAQnC,EAASzB,KAAK4D,cAGzB,CAACzC,IAQJ,OACE,sBAAKtB,UAAU,eAAf,UACE,cAAC,EAAD,IACCiD,EAAU,cAAC,EAAD,CAAST,KAPH,SAAC2C,GACpBjC,EAAWiC,MAMoC,KAC7C,sBAAKnF,UAAU,kBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,qBAAKgB,IAAKgD,EAAUZ,SAAUnC,IAAI,OAEpC,sBAAKjB,UAAU,gBAAf,UACE,qBAAKA,UAAU,UACf,qBAAKA,UAAU,kBAAf,SACE,qBAAKgB,IAAKgD,EAAUX,YAAapC,IAAI,OAEvC,sBAAKjB,UAAU,aAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,6BAAKgE,EAAUb,kBAEjB,sBAAKnD,UAAU,UAAf,UACE,+BAAOgE,EAAU1D,cACjB,cAAC,IAAD,CAAON,UAAU,UACjB,+BAAOgE,EAAUV,SACjB,cAAC,IAAD,CAAOtD,UAAU,UACJ,UAAZT,EACC,+BAAOyE,EAAUT,UAEjB,+BAAOS,EAAUR,qBAGrB,sBAAKxD,UAAU,UAAf,UACGgE,EAAUP,YACT,sBAAKzD,UAAU,sBAAf,UACE,cAAC,IAAD,CACEJ,MAAOoE,EAAUP,YACjB2B,KAAI,UAAKpB,EAAUP,YAAf,OAEN,iDAEA,KACJ,sBAAKzD,UAAU,cAAcC,QAAS,kBAAMiD,GAAW,IAAvD,UACE,qBAAKlD,UAAU,cACf,sDAGJ,sBAAKA,UAAU,QAAf,UACE,sBAAMA,UAAU,UAAhB,SAA2BgE,EAAUN,UACrC,sBAAM1D,UAAU,iBAAhB,sBACA,sBAAMA,UAAU,gBAAhB,SAAiCgE,EAAUL,uBAKnD,sBAAK3D,UAAU,gBAAf,UACE,sBAAKA,UAAU,cAAf,UACE,sBAAMA,UAAU,YAAhB,6BACA,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,0BACf,cAAC,EAAD,UAGJ,sBAAKA,UAAU,eAAf,UACE,sBAAMA,UAAU,gBAAhB,mBACA,sBAAKA,UAAU,cAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,sBAAMA,UAAU,iBAAhB,oBACA,sBAAMA,UAAU,cAAhB,SAA+BgE,EAAUJ,YAE3C,sBAAK5D,UAAU,wBAAf,UACE,sBAAMA,UAAU,kBAAhB,qBACA,cAAC,EAAD,CAASW,QAASqD,EAAUH,yBAE9B,sBAAK7D,UAAU,yBAAf,UACE,sBAAMA,UAAU,mBAAhB,8BACA,+BAAOgE,EAAUF,cAEnB,sBAAK9D,UAAU,uBAAf,UACGgE,EAAUD,OACT,sBAAM/D,UAAU,iBAAhB,oBACE,KACHgE,EAAUD,OAAS,+BAAOC,EAAUD,OAAS,OAAe,qBC5J9DsB,G,YAAY,SAAC,GAA8B,IAA5BnG,EAA2B,EAA3BA,GAAImB,EAAuB,EAAvBA,IAAKlB,EAAkB,EAAlBA,KAAMiB,EAAY,EAAZA,MACzC,EAAgCe,qBAAW1C,GAA1BM,GAAjB,EAAQD,QAAR,EAAiBC,YACXe,EAAUC,cAEhB,OACE,qBAAKC,UAAU,OAAOd,GAAIA,EAA1B,SACE,qBAAKc,UAAU,aAAf,SACE,qBACEgB,IAAKX,EACLY,IAAK9B,GAAQiB,EACbH,QAAS,WACPlB,EAAWG,GACXY,EAAQI,KAAK,kBAAoBhB,SAPNA,KCyIxBoG,G,MAnJI,CACjBC,OAAQ,CACN,CACErG,GAAI,GACJC,KAAM,UAER,CACED,GAAI,GACJC,KAAM,aAER,CACED,GAAI,GACJC,KAAM,aAER,CACED,GAAI,GACJC,KAAM,UAER,CACED,GAAI,GACJC,KAAM,SAER,CACED,GAAI,GACJC,KAAM,eAER,CACED,GAAI,GACJC,KAAM,SAER,CACED,GAAI,MACJC,KAAM,UAER,CACED,GAAI,GACJC,KAAM,WAER,CACED,GAAI,GACJC,KAAM,WAER,CACED,GAAI,GACJC,KAAM,UAER,CACED,GAAI,MACJC,KAAM,SAER,CACED,GAAI,KACJC,KAAM,WAER,CACED,GAAI,MACJC,KAAM,WAER,CACED,GAAI,IACJC,KAAM,mBAER,CACED,GAAI,MACJC,KAAM,YAER,CACED,GAAI,GACJC,KAAM,YAER,CACED,GAAI,MACJC,KAAM,OAER,CACED,GAAI,GACJC,KAAM,YAGVqG,GAAI,CACF,CACEtG,GAAI,MACJC,KAAM,sBAER,CACED,GAAI,GACJC,KAAM,aAER,CACED,GAAI,GACJC,KAAM,UAER,CACED,GAAI,GACJC,KAAM,SAER,CACED,GAAI,GACJC,KAAM,eAER,CACED,GAAI,GACJC,KAAM,SAER,CACED,GAAI,MACJC,KAAM,UAER,CACED,GAAI,MACJC,KAAM,QAER,CACED,GAAI,KACJC,KAAM,WAER,CACED,GAAI,MACJC,KAAM,QAER,CACED,GAAI,MACJC,KAAM,WAER,CACED,GAAI,MACJC,KAAM,oBAER,CACED,GAAI,MACJC,KAAM,QAER,CACED,GAAI,MACJC,KAAM,QAER,CACED,GAAI,MACJC,KAAM,kBAER,CACED,GAAI,GACJC,KAAM,c,QCxICsG,EAAM,SAACtD,GAClB,MAAsChB,qBAAW1C,GAAzCW,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,cACpB,EAAgC8B,qBAAW1C,GAAnCc,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WACjB,EAAsC2B,qBAAW1C,GAA7BQ,GAApB,EAAQD,WAAR,EAAoBC,eAEpB,OACE,gCACE,yBAAQe,UAAU,SAAlB,UACE,sBACEA,UAAU,SACVC,QAAS,WACPT,EAAW,SACXH,EAAciG,EAAWC,OAAO,IAChCtG,EAAc,IALlB,oBAUA,sBACEe,UAAU,KACVC,QAAS,WACPT,EAAW,MACXH,EAAciG,EAAWE,GAAG,IAC5BvG,EAAc,IALlB,uBAUa,UAAZM,EACC,qBAAKS,UAAU,oBAEf,qBAAKA,UAAU,iBAEJ,UAAZT,EACC,qBAAKS,UAAU,uBAAf,SACGsF,EAAWC,OAAO1E,KAAI,SAACL,GAAD,OACrB,sBACEtB,GAAIsB,EAAMtB,GACVe,QAAS,WACPZ,EAAcmB,GACdvB,EAAc,IAJlB,SAOGuB,EAAMrB,YAKb,qBAAKa,UAAU,uBAAf,SACGsF,EAAWE,GAAG3E,KAAI,SAACL,GAAD,OACjB,sBACEtB,GAAIsB,EAAMtB,GACVe,QAAS,WACPZ,EAAcmB,GACdvB,EAAc,IAJlB,SAOGuB,EAAMrB,eAMjB,sBAAKa,UAAU,eAAf,UACE,sBAAMA,UAAU,iBAAhB,SACe,OAAZT,EAAmB,YAAcA,IAEpC,cAAC,IAAD,CAAmBS,UAAU,sBAC7B,sBAAMA,UAAU,aAAhB,SAA8BZ,EAAWD,cCjEpCuG,EAAO,WAClB,MAAkC7G,mBAASsB,GAA3C,mBAAOwF,EAAP,KAAkBC,EAAlB,KACA,EAAsCzE,qBAAW1C,GAAzCW,EAAR,EAAQA,WACR,GADA,EAAoBC,cACY8B,qBAAW1C,IAAnCc,EAAR,EAAQA,QACR,GADA,EAAiBC,WACqB2B,qBAAW1C,IAAzCO,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,cAEdoB,EACJ,yCACAd,EACA,kDACAP,EACA,gBACAI,EAAWF,GAYb,OAVAR,IAAM8C,WAAU,WACdqE,aAAaC,WAAW,WACxBD,aAAaE,QAAQ,UAAW1F,GAChC,IAAM2F,EAAUH,aAAaI,QAAQ,WACrCxE,IAAMC,IAAIsE,GAASrE,MAAK,SAACC,GACvBgE,EAAahE,EAASzB,KAAKmC,SAC3B7C,QAAQC,IAAIkC,EAASzB,KAAKmC,QAAQ,SAEnC,CAACtD,EAAYI,EAAYG,IAG1B,sBAAKS,UAAU,eAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,qBAAKA,UAAU,oBAAf,SACG2F,EAAU9E,KAAI,SAACqF,GAAD,OACb,cAAC,EAAD,CACEhH,GAAIgH,EAAMhH,GACVkB,MAAO8F,EAAMhC,eACb/E,KAAM+G,EAAMlE,cACZ3B,IAAK,mCAAqC6F,EAAM/B,mBAItD,sBAAKnE,UAAU,WAAf,UACE,sBACEA,UAAU,oBACVC,QAAS,WACHjB,EAAa,GACfC,EAAcD,EAAa,IAJjC,UAQE,qBAAKgB,UAAU,kBACf,sBAAMA,UAAU,gBAAhB,yBAEF,sBAAMA,UAAU,cAAhB,SAA+BhB,IAC/B,sBACEgB,UAAU,eACVC,QAAS,WACHjB,EAAa,KACfC,EAAcD,EAAa,IAJjC,UAQE,sBAAMgB,UAAU,YAAhB,kBACA,qBAAKA,UAAU,2B,QCvDV,SAASmG,IACtB,OACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,qBAAKnG,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoG,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,oBAAZ,SACE,cAAC,EAAD,eCxBd,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7E,MAAK,YAAkD,IAA/C8E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,EAAD,MAEFc,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7e9c0da5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport const RootContext = React.createContext();\r\n\r\nexport default ({ children }) => {\r\n  const [movieId, setMovieId] = useState(\"\");\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [movieGener, setMovieGener] = useState({ id: 28, name: \"Action\" });\r\n  const [movieTv, setMovieTv] = useState(\"movie\");\r\n  const defaultValues = {\r\n    movieId,\r\n    setMovieId,\r\n    pageNumber,\r\n    setPageNumber,\r\n    movieGener,\r\n    setMovieGener,\r\n    movieTv,\r\n    setMovieTv,\r\n  };\r\n  console.log(\"context = \" + movieId);\r\n  return (\r\n    <RootContext.Provider value={defaultValues}>\r\n      {children}\r\n    </RootContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./tmdbIcon.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const TmdbIcon = () => {\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <div className=\"icon-bar\">\r\n      <div className=\"tmdb-icon\" onClick={() => history.push(\"/\")}>\r\n        <div className=\"tm\">\r\n          <span>TM</span>\r\n          <span>DB</span>\r\n          <div className=\"white-bar\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","const data = [\r\n  {\r\n    id: \"11\",\r\n    title: \"Money Heist\",\r\n    URL: \"https://images.thequint.com/thequint%2F2021-09%2Fb9aab177-f368-4185-91b4-b37f15c2b7ee%2Fmoneyheist.png?auto=format%2Ccompress&fmt=webp\",\r\n    releaseDate: \"02-May-2017\",\r\n    timeDuration: \"5 Seasons\",\r\n    gener: \"Crime Suspenseful Exciting\",\r\n    age: \"16+\",\r\n  },\r\n  {\r\n    id: \"12\",\r\n    title: \"Lucifer\",\r\n    URL: \"https://releasedate.news/wp-content/uploads/2021/05/Lucifer-Season-6-What-Netflix-Release-Date-A-planned-sequel.jpg\",\r\n    releaseDate: \"25-jan-2016\",\r\n    timeDuration: \"6 Seasons\",\r\n    gener: \"Detective fantasy Comedy-drama\",\r\n    age: \"18+\",\r\n  },\r\n  {\r\n    id: \"13\",\r\n    title: \"Kate\",\r\n    URL: \"https://ntvb.tmsimg.com/assets/p20115224_v_h8_aa.jpg?w=960&h=540\",\r\n    releaseDate: \"10-sep-2021\",\r\n    timeDuration: \"1h 46m\",\r\n    gener: \"Thriller Adventure\",\r\n    age: \"18+\",\r\n  },\r\n  {\r\n    id: \"14\",\r\n    title: \"The Witcher\",\r\n    URL: \"https://images.indianexpress.com/2019/12/the-witcher-netflix-759.jpg\",\r\n    releaseDate: \"20-dec-2019\",\r\n    timeDuration: \"2 seasons\",\r\n    gener: \"Fantasy \",\r\n    age: \"18+\",\r\n  },\r\n  {\r\n    id: \"15\",\r\n    title: \"6 Underground\",\r\n    URL: \"https://geekireland.com/wp-content/uploads/2019/12/6-underground.jpg\",\r\n    releaseDate: \"10-dec-2019\",\r\n    timeDuration: \"2h 8m\",\r\n    gener: \"Action/Thriller \",\r\n    age: \"18+\",\r\n  },\r\n  {\r\n    id: \"16\",\r\n    title: \"Peaky Blinders\",\r\n    URL: \"https://thumbs-prod.si-cdn.com/Frk9N0whaZA7dSd13Tbcwd0-bbU=/420x240/filters:focal(634x85:635x86)/https://public-media.si-cdn.com/filer/7b/ba/7bba298e-7e2e-44f0-adb9-b47dfdc1e240/p05m69vt.jpg\",\r\n    releaseDate: \"12-sep-2013\",\r\n    timeDuration: \"5 seasons\",\r\n    gener: \"Drama Violent\",\r\n    age: \"18+\",\r\n  },\r\n];\r\n\r\nexport default data;\r\n","import React from \"react\";\r\nimport data from \"../data\";\r\nimport \"./network.css\";\r\n\r\nexport const Network = ({ network }) => {\r\n  let logos = data;\r\n  if (network) {\r\n    logos = network.map(\r\n      (logo) => `https://image.tmdb.org/t/p/original${logo.logo_path}`\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"logoDiv\">\r\n      {logos.map((logo) => (\r\n        <div className=\"logo\">\r\n          <img src={logo} alt=\"\" />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport \"./cast.css\";\r\nimport { RootContext } from \"../../context/root-context\";\r\nimport axios from \"axios\";\r\nimport data from \"../data\";\r\n\r\nexport const Cast = () => {\r\n  const { movieId, setMovieId } = useContext(RootContext);\r\n  const { movieTv, setMovieTv } = useContext(RootContext);\r\n\r\n  const [castInfo, setCastInfo] = useState(data);\r\n  const [baseURL, setBaseURL] = useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    setBaseURL(\r\n      \"https://api.themoviedb.org/3/\" +\r\n        movieTv +\r\n        \"/\" +\r\n        movieId +\r\n        \"/credits?api_key=75b1242fafea7d5177dca77f56a9e008\"\r\n    );\r\n  }, [movieId]);\r\n\r\n  React.useEffect(() => {\r\n    axios.get(baseURL).then((response) => {\r\n      console.log(response.data.cast);\r\n      setCastInfo(\r\n        response.data.cast.filter((cast) => cast.profile_path !== null)\r\n      );\r\n    });\r\n  }, [baseURL]);\r\n\r\n  return (\r\n    <div className=\"cast-display custom-scrollbar-css\">\r\n      {castInfo.map((cast) => (\r\n        <div className=\"cast\" key={cast.id} id={cast.id}>\r\n          <div className=\"cast-card\">\r\n            <div className=\"profile-pic\">\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/original/${cast.profile_path}`}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <div className=\"ON-CN\">\r\n              <span className=\"orignal-name\">{cast.original_name}</span>\r\n              <span className=\"character\">Character</span>\r\n              <span className=\"chracter-name\">{cast.character}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport \"./trailer.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport { RootContext } from \"../../context/root-context\";\r\nimport axios from \"axios\";\r\nimport data from \"../data\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nexport const Trailer = (props) => {\r\n  const { movieId, setMovieId } = useContext(RootContext);\r\n  const { movieTv, setMovieTv } = useContext(RootContext);\r\n\r\n  const [trailerKey, setTrailerKey] = useState(data);\r\n  const [baseURL, setBaseURL] = useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    setBaseURL(\r\n      \"https://api.themoviedb.org/3/\" +\r\n        movieTv +\r\n        \"/\" +\r\n        movieId +\r\n        \"/videos?api_key=75b1242fafea7d5177dca77f56a9e008\"\r\n    );\r\n  }, [movieId]);\r\n\r\n  React.useEffect(() => {\r\n    axios.get(baseURL).then((response) => {\r\n      console.log(response.data);\r\n      setTrailerKey(response.data.results[0].key);\r\n    });\r\n  }, [baseURL]);\r\n\r\n  const opts = {\r\n    height: \"550\",\r\n    width: \"970\",\r\n    playerVars: {\r\n      autoplay: 0,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"trailer-dashboard\">\r\n      <div className=\"border\" onClick={() => props.show(false)}></div>\r\n\r\n      <div className=\"loading\">\r\n        <ReactLoading type=\"cylon\" height={667} width={575} />\r\n      </div>\r\n      <div className=\"trailer\">\r\n        <YouTube videoId={trailerKey} opts={opts} />;\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport \"./detail-page.css\";\r\nimport { TmdbIcon } from \"../TMDB-Icon/tmdbIcon\";\r\nimport { BsDot } from \"react-icons/bs\";\r\nimport { RootContext } from \"../../context/root-context\";\r\nimport axios from \"axios\";\r\nimport { CircularProgressbar } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport { Network } from \"../productionCompanies/network\";\r\nimport { Cast } from \"../movieCast/cast\";\r\nimport { Trailer } from \"../movieTrailer/trailer\";\r\n\r\nexport const DetailPage = () => {\r\n  const [trailer, setTrailer] = useState(false);\r\n  const { movieId, setMovieId } = useContext(RootContext);\r\n  const { movieTv, setMovieTv } = useContext(RootContext);\r\n\r\n  const [movieInfo, setMovieInfo] = useState({\r\n    originalTitle: \"\",\r\n    movieURL: \"\",\r\n    backdropURL: \"\",\r\n    geners: \"\",\r\n    releaseDate: \"\",\r\n    runTime: \"\",\r\n    numberOfSeasons: \"\",\r\n    voteAverage: \"\",\r\n    tagline: \"\",\r\n    overview: \"\",\r\n    status: \"\",\r\n    productionCompanies: \"\",\r\n    language: \"\",\r\n    budget: \"\",\r\n  });\r\n  const [baseURL, setBaseURL] = useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    setBaseURL(\r\n      \"https://api.themoviedb.org/3/\" +\r\n        movieTv +\r\n        \"/\" +\r\n        movieId +\r\n        \"?api_key=75b1242fafea7d5177dca77f56a9e008\"\r\n    );\r\n  }, [movieId]);\r\n\r\n  React.useEffect(() => {\r\n    axios.get(baseURL).then((response) => {\r\n      console.log(response.data);\r\n      setMovieInfo({\r\n        originalTitle:\r\n          response.data.original_title || response.data.original_name,\r\n        movieURL:\r\n          \"https://image.tmdb.org/t/p/original/\" + response.data.poster_path,\r\n        backdropURL:\r\n          \"https://image.tmdb.org/t/p/original/\" + response.data.backdrop_path,\r\n        geners: response.data.genres.map((gen) => gen.name + \", \"),\r\n        releaseDate: response.data.release_date,\r\n        runTime: `${Math.floor(response.data.runtime / 60)}h ${\r\n          response.data.runtime % 60\r\n        }m`,\r\n        numberOfSeasons: response.data.number_of_seasons + \" Seasons\",\r\n        voteAverage:\r\n          parseInt(response.data.vote_average.toString().split(\".\")[0]) * 10 +\r\n          parseInt(response.data.vote_average.toString().split(\".\")[1]),\r\n        tagline: response.data.tagline,\r\n        overview: response.data.overview,\r\n        status: response.data.status,\r\n        productionCompanies: response.data.production_companies.filter(\r\n          (network) => network.logo_path !== null\r\n        ),\r\n        language: response.data.spoken_languages[0].english_name,\r\n        budget: response.data.budget,\r\n      });\r\n    });\r\n  }, [baseURL]);\r\n\r\n  //console.log(movieInfo);\r\n\r\n  const closeTrailer = (close) => {\r\n    setTrailer(close);\r\n  };\r\n\r\n  return (\r\n    <div className=\"movie-detail\">\r\n      <TmdbIcon />\r\n      {trailer ? <Trailer show={closeTrailer} /> : null}\r\n      <div className=\"detail-backdrop\">\r\n        <div className=\"movie-poster\">\r\n          <img src={movieInfo.movieURL} alt=\"\" />\r\n        </div>\r\n        <div className=\"info-backdrop\">\r\n          <div className=\"shade\"></div>\r\n          <div className=\"backdrop-poster\">\r\n            <img src={movieInfo.backdropURL} alt=\"\" />\r\n          </div>\r\n          <div className=\"movie-info\">\r\n            <div className=\"movie-title-orignal\">\r\n              <h1>{movieInfo.originalTitle}</h1>\r\n            </div>\r\n            <div className=\"G-RD-RT\">\r\n              <span>{movieInfo.releaseDate}</span>\r\n              <BsDot className=\"Bsdot\" />\r\n              <span>{movieInfo.geners}</span>\r\n              <BsDot className=\"Bsdot\" />\r\n              {movieTv === \"movie\" ? (\r\n                <span>{movieInfo.runTime}</span>\r\n              ) : (\r\n                <span>{movieInfo.numberOfSeasons}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"CPB-PTB\">\r\n              {movieInfo.voteAverage ? (\r\n                <div className=\"progress-circle-div\">\r\n                  <CircularProgressbar\r\n                    value={movieInfo.voteAverage}\r\n                    text={`${movieInfo.voteAverage}%`}\r\n                  />\r\n                  <span>User Score</span>\r\n                </div>\r\n              ) : null}\r\n              <div className=\"playTrailer\" onClick={() => setTrailer(true)}>\r\n                <div className=\"play-icon\"></div>\r\n                <span>Play Trailer</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"TL-OV\">\r\n              <span className=\"tagline\">{movieInfo.tagline}</span>\r\n              <span className=\"overview-title\">Overview</span>\r\n              <span className=\"overview-text\">{movieInfo.overview}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"other-details\">\r\n        <div className=\"left-detail\">\r\n          <span className=\"cast-text\">Top Billed Cast</span>\r\n          <div className=\"cast-dashboard\">\r\n            <div className=\"ending-gradient-left\"></div>\r\n            <div className=\"ending-gradient-right\"></div>\r\n            <Cast />\r\n          </div>\r\n        </div>\r\n        <div className=\"right-detail\">\r\n          <span className=\"facts heading\">Facts</span>\r\n          <div className=\"movie-facts\">\r\n            <div className=\"status-fact fact-div\">\r\n              <span className=\"status heading\">Status</span>\r\n              <span className=\"status-text\">{movieInfo.status}</span>\r\n            </div>\r\n            <div className=\"network-fact fact-div\">\r\n              <span className=\"network heading\">Network</span>\r\n              <Network network={movieInfo.productionCompanies} />\r\n            </div>\r\n            <div className=\"language-fact fact-div\">\r\n              <span className=\"language heading\">Orignal Language</span>\r\n              <span>{movieInfo.language}</span>\r\n            </div>\r\n            <div className=\"budget-fact fact-div\">\r\n              {movieInfo.budget ? (\r\n                <span className=\"budget heading\">Budget</span>\r\n              ) : null}\r\n              {movieInfo.budget ? <span>{movieInfo.budget + \" $\"}</span> : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport \"./style.css\";\r\nimport { RootContext } from \"../../context/root-context\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const MovieCard = ({ id, URL, name, title }) => {\r\n  const { movieId, setMovieId } = useContext(RootContext);\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"card\" id={id} key={id}>\r\n      <div className=\"card-image\">\r\n        <img\r\n          src={URL}\r\n          alt={name || title}\r\n          onClick={() => {\r\n            setMovieId(id);\r\n            history.push(\"/detail/movie/:\" + id);\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","const genersList = {\r\n  movies: [\r\n    {\r\n      id: 28,\r\n      name: \"Action\",\r\n    },\r\n    {\r\n      id: 12,\r\n      name: \"Adventure\",\r\n    },\r\n    {\r\n      id: 16,\r\n      name: \"Animation\",\r\n    },\r\n    {\r\n      id: 35,\r\n      name: \"Comedy\",\r\n    },\r\n    {\r\n      id: 80,\r\n      name: \"Crime\",\r\n    },\r\n    {\r\n      id: 99,\r\n      name: \"Documentary\",\r\n    },\r\n    {\r\n      id: 18,\r\n      name: \"Drama\",\r\n    },\r\n    {\r\n      id: 10751,\r\n      name: \"Family\",\r\n    },\r\n    {\r\n      id: 14,\r\n      name: \"Fantasy\",\r\n    },\r\n    {\r\n      id: 36,\r\n      name: \"History\",\r\n    },\r\n    {\r\n      id: 27,\r\n      name: \"Horror\",\r\n    },\r\n    {\r\n      id: 10402,\r\n      name: \"Music\",\r\n    },\r\n    {\r\n      id: 9648,\r\n      name: \"Mystery\",\r\n    },\r\n    {\r\n      id: 10749,\r\n      name: \"Romance\",\r\n    },\r\n    {\r\n      id: 878,\r\n      name: \"Science Fiction\",\r\n    },\r\n    {\r\n      id: 10770,\r\n      name: \"TV Movie\",\r\n    },\r\n    {\r\n      id: 53,\r\n      name: \"Thriller\",\r\n    },\r\n    {\r\n      id: 10752,\r\n      name: \"War\",\r\n    },\r\n    {\r\n      id: 37,\r\n      name: \"Western\",\r\n    },\r\n  ],\r\n  tv: [\r\n    {\r\n      id: 10759,\r\n      name: \"Action & Adventure\",\r\n    },\r\n    {\r\n      id: 16,\r\n      name: \"Animation\",\r\n    },\r\n    {\r\n      id: 35,\r\n      name: \"Comedy\",\r\n    },\r\n    {\r\n      id: 80,\r\n      name: \"Crime\",\r\n    },\r\n    {\r\n      id: 99,\r\n      name: \"Documentary\",\r\n    },\r\n    {\r\n      id: 18,\r\n      name: \"Drama\",\r\n    },\r\n    {\r\n      id: 10751,\r\n      name: \"Family\",\r\n    },\r\n    {\r\n      id: 10762,\r\n      name: \"Kids\",\r\n    },\r\n    {\r\n      id: 9648,\r\n      name: \"Mystery\",\r\n    },\r\n    {\r\n      id: 10763,\r\n      name: \"News\",\r\n    },\r\n    {\r\n      id: 10764,\r\n      name: \"Reality\",\r\n    },\r\n    {\r\n      id: 10765,\r\n      name: \"Sci-Fi & Fantasy\",\r\n    },\r\n    {\r\n      id: 10766,\r\n      name: \"Soap\",\r\n    },\r\n    {\r\n      id: 10767,\r\n      name: \"Talk\",\r\n    },\r\n    {\r\n      id: 10768,\r\n      name: \"War & Politics\",\r\n    },\r\n    {\r\n      id: 37,\r\n      name: \"Western\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport default genersList;\r\n","import React, { useContext, useState } from \"react\";\r\nimport \"./nav.css\";\r\nimport genersList from \"../genersList\";\r\nimport { RootContext } from \"../../context/root-context\";\r\nimport { IoIosArrowForward } from \"react-icons/io\";\r\n\r\nexport const Nav = (props) => {\r\n  const { movieGener, setMovieGener } = useContext(RootContext);\r\n  const { movieTv, setMovieTv } = useContext(RootContext);\r\n  const { pageNumber, setPageNumber } = useContext(RootContext);\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"header\">\r\n        <span\r\n          className=\"movies\"\r\n          onClick={() => {\r\n            setMovieTv(\"movie\");\r\n            setMovieGener(genersList.movies[0]);\r\n            setPageNumber(1);\r\n          }}\r\n        >\r\n          Movies\r\n        </span>\r\n        <span\r\n          className=\"tv\"\r\n          onClick={() => {\r\n            setMovieTv(\"tv\");\r\n            setMovieGener(genersList.tv[0]);\r\n            setPageNumber(1);\r\n          }}\r\n        >\r\n          Tv Series\r\n        </span>\r\n        {movieTv === \"movie\" ? (\r\n          <div className=\"underLine-Movie\"></div>\r\n        ) : (\r\n          <div className=\"underLine-Tv\"></div>\r\n        )}\r\n        {movieTv === \"movie\" ? (\r\n          <nav className=\"geners scrollbar-css\">\r\n            {genersList.movies.map((gener) => (\r\n              <span\r\n                id={gener.id}\r\n                onClick={() => {\r\n                  setMovieGener(gener);\r\n                  setPageNumber(1);\r\n                }}\r\n              >\r\n                {gener.name}\r\n              </span>\r\n            ))}\r\n          </nav>\r\n        ) : (\r\n          <nav className=\"geners scrollbar-css\">\r\n            {genersList.tv.map((gener) => (\r\n              <span\r\n                id={gener.id}\r\n                onClick={() => {\r\n                  setMovieGener(gener);\r\n                  setPageNumber(1);\r\n                }}\r\n              >\r\n                {gener.name}\r\n              </span>\r\n            ))}\r\n          </nav>\r\n        )}\r\n      </header>\r\n      <div className=\"current-page\">\r\n        <span className=\"currentMovieTv\">\r\n          {movieTv === \"tv\" ? \"Tv Series\" : movieTv}\r\n        </span>\r\n        <IoIosArrowForward className=\"IoIosArrowForward\" />\r\n        <span className=\"currentGen\">{movieGener.name}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./home.css\";\r\nimport { TmdbIcon } from \"../components/TMDB-Icon/tmdbIcon\";\r\nimport { MovieCard } from \"../components/card\";\r\nimport data from \"../components/data\";\r\nimport axios from \"axios\";\r\nimport { RootContext } from \"../context/root-context\";\r\nimport { Nav } from \"../components/navbar/nav\";\r\n\r\nexport const Home = () => {\r\n  const [movieData, setMovieData] = useState(data);\r\n  const { movieGener, setMovieGener } = useContext(RootContext);\r\n  const { movieTv, setMovieTv } = useContext(RootContext);\r\n  const { pageNumber, setPageNumber } = useContext(RootContext);\r\n\r\n  const URL =\r\n    \"https://api.themoviedb.org/3/discover/\" +\r\n    movieTv +\r\n    \"?api_key=75b1242fafea7d5177dca77f56a9e008&page=\" +\r\n    pageNumber +\r\n    \"&with_genres=\" +\r\n    movieGener.id;\r\n\r\n  React.useEffect(() => {\r\n    localStorage.removeItem(\"BaseURL\");\r\n    localStorage.setItem(\"BaseURL\", URL);\r\n    const BaseURL = localStorage.getItem(\"BaseURL\");\r\n    axios.get(BaseURL).then((response) => {\r\n      setMovieData(response.data.results);\r\n      console.log(response.data.results[0]);\r\n    });\r\n  }, [pageNumber, movieGener, movieTv]);\r\n\r\n  return (\r\n    <div className=\"Home-display\">\r\n      <TmdbIcon />\r\n      <Nav />\r\n      <div className=\"moviecard-display\">\r\n        {movieData.map((movie) => (\r\n          <MovieCard\r\n            id={movie.id}\r\n            title={movie.original_title}\r\n            name={movie.original_name}\r\n            URL={\"https://image.tmdb.org/t/p/w154/\" + movie.poster_path}\r\n          />\r\n        ))}\r\n      </div>\r\n      <nav className=\"page-nav\">\r\n        <div\r\n          className=\"previous-backword\"\r\n          onClick={() => {\r\n            if (pageNumber > 1) {\r\n              setPageNumber(pageNumber - 1);\r\n            }\r\n          }}\r\n        >\r\n          <div className=\"backword-icon\"></div>\r\n          <span className=\"previous-page\">Previous</span>\r\n        </div>\r\n        <span className=\"page-number\">{pageNumber}</span>\r\n        <div\r\n          className=\"next-forward\"\r\n          onClick={() => {\r\n            if (pageNumber < 500) {\r\n              setPageNumber(pageNumber + 1);\r\n            }\r\n          }}\r\n        >\r\n          <span className=\"next-page\">Next</span>\r\n          <div className=\"forward-icon\"></div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\nimport RootContext from \"./context/root-context\";\nimport ProtectedRoute from \"./hoc/protectedRoute\";\nimport { DetailPage } from \"./components/movie-detail-page/detail-page\";\nimport { Home } from \"./hoc/home\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams,\n} from \"react-router-dom\";\n\nexport default function App() {\n  return (\n    <RootContext>\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/detail/movie/:id\">\n              <DetailPage />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </RootContext>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}